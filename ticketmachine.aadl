package ticketmachine
public
	with base_types;
	with devices;
	
	System TicketMachineSystem	
	end TicketMachineSystem;	
	
	system implementation TicketMachineSystem.with_devices
		subcomponents 
			this_data_fetcher_module: device devices::Data_Fetcher_Module;
			this_proximity_card_reader: device devices::Proximity_Card_Reader;
			this_city_card_reader: device devices::City_Card_Reader;
			this_cash_box: device devices::Cash_Box;
			this_keyboard: device devices::Keyboard;
			this_display_unit: device devices::Display_Unit;
			this_cash_unit: device devices::Cash_Unit;
			this_printer: device devices::Printer;
			this_controller: process Controller.with_threads;
			this_bus: bus devices::Hw_Connection.impl;
			this_processor: processor Main_Processor.impl;
			
		connections
			proximity_card_reader_out_conn: port this_proximity_card_reader.nfc_card_tapped -> this_controller.proximity_card_reader_in;
			city_card_reader_out_conn: port this_city_card_reader.city_card_inserted -> this_controller.city_card_reader_in;
			printer_conn: port this_controller.printer_out -> this_printer.print_ticket;
			cash_unit_out_conn: port this_controller.cash_unit_out -> this_cash_unit.get_cash;
			cash_unit_in_conn: port this_cash_unit.cash_inserted -> this_controller.cash_unit_in;
			cash_box_in_conn: port this_cash_box.cash_inserted -> this_controller.cash_box_in;
			cash_box_out_conn: port this_controller.cash_box_out -> this_cash_box.give_the_change;

			display_unit_conn: port this_controller.display_view_out -> this_display_unit.display_view_in;			
			keyboard_conn: port this_keyboard.key_pressed -> this_controller.key_pressed;
			data_fetcher_module_card_data: port this_controller.card_data_out -> this_data_fetcher_module.card_data_in;
			data_fetcher_module_bank_account_data: port this_data_fetcher_module.bank_account_data_auth -> this_controller.bank_account_data_auth_in;
			
			bus_proximity_card_reader: bus access this_bus -> this_proximity_card_reader.bus_access;
			bus_city_card_reader: bus access this_bus -> this_city_card_reader.bus_access;
			bus_cash_unit: bus access this_bus -> this_cash_unit.bus_access;
			bus_printer: bus access this_bus -> this_printer.bus_access;
			bus_cash_box: bus access this_bus -> this_cash_box.bus_access;
			bus_keyboard: bus access this_bus -> this_keyboard.bus_access;
			bus_display_unit: bus access this_bus -> this_display_unit.bus_access; 
			bus_processor: bus access this_bus -> this_processor.bus_access; 
			bus_data_fetcher_module: bus access this_bus -> this_data_fetcher_module.bus_access;	
	end TicketMachineSystem.with_devices;
	
	process Controller
	features
		key_pressed: in data port Base_Types::Character;
		display_view_out: out data port Base_Types::String;
		printer_out: out data port Base_Types::String;
		card_data_out: out data port;

		proximity_card_reader_in: in event port;
		city_card_reader_in: in event port;
		cash_box_in: in event port;
		cash_box_out: out event port;
		cash_unit_in: in event port;
		cash_unit_out: out event port;
		bank_account_data_auth_in: in event port;
end Controller;
	
	process implementation Controller.with_threads	
		subcomponents
			this_nfc_thread: thread nfc_thread.impl;
			this_city_card_thread: thread city_card_thread.impl;
			this_cash_unit_thread: thread cash_unit_thread.impl;
			this_cash_box_thread: thread cash_box_thread.impl;
			this_keyboard_thread: thread keyboard_thread.impl;
			this_display_view_thread: thread display_view_thread.impl;
			this_printer_thread: thread printer_thread.impl;
			this_data_fetcher_thread: thread  data_fetcher_thread.impl;
			
		connections
			nfc_in_conn: port proximity_card_reader_in -> this_nfc_thread.proximity_card_reader_in;
			city_card_in_conn: port city_card_reader_in -> this_city_card_thread.city_card_reader_in;
			cash_unit_in_conn: port cash_unit_in -> this_cash_unit_thread.cash_unit_in;
			cash_box_in_conn: port cash_box_in -> this_cash_box_thread.cash_box_in;
			keyboard_conn: port key_pressed -> this_keyboard_thread.key_input;
			
			cash_unit_out_conn: port this_cash_unit_thread.cash_unit_out -> cash_unit_out;
			cash_box_out_conn: port this_cash_box_thread.cash_box_out -> cash_box_out;
			display_view_out_conn: port this_display_view_thread.display_view_out -> display_view_out;
			printer_out_conn: port this_printer_thread.printer_out -> printer_out;
			
			data_fetcher_in_conn: port bank_account_data_auth_in -> this_data_fetcher_thread.bank_account_data_auth_in;
			data_fetcher_out_conn: port this_data_fetcher_thread.card_data_out -> card_data_out;
	end Controller.with_threads;
		
	thread nfc_thread		
		features
			proximity_card_reader_in: in event port;		
	end nfc_thread;
	
	thread implementation nfc_thread.impl		
	end nfc_thread.impl;
	
	thread city_card_thread		
		features
			city_card_reader_in: in event port;		
	end city_card_thread;
	
	thread implementation city_card_thread.impl		
	end city_card_thread.impl;
	
	thread cash_unit_thread
		features
			cash_unit_in: in event port;
			cash_unit_out: out event port;		
	end cash_unit_thread;
	
	thread implementation cash_unit_thread.impl
	end cash_unit_thread.impl;
	
	thread cash_box_thread
		features
			cash_box_in: in event port;
			cash_box_out: out event port;
	end cash_box_thread;
	
	thread implementation cash_box_thread.impl
	end cash_box_thread.impl;
	
	thread keyboard_thread
		features 
			key_input: in data port Base_Types::Character;						
	end keyboard_thread;
	
	thread implementation keyboard_thread.impl
	end keyboard_thread.impl;
	
	thread display_view_thread
		features
			display_view_out: out data port Base_Types::String;
	end display_view_thread;
	
	thread implementation display_view_thread.impl
	end display_view_thread.impl;
	
	thread printer_thread
		features
			printer_out: out data port Base_Types::String;			
	end printer_thread;
	
	thread implementation printer_thread.impl
	end printer_thread.impl;
	
	thread data_fetcher_thread
	features
		card_data_out: out data port;
		bank_account_data_auth_in: in event port;
	end data_fetcher_thread;
	
	thread implementation data_fetcher_thread.impl
	end data_fetcher_thread.impl;
	
	processor Main_Processor		
		features
			bus_access: requires bus access devices::Hw_Connection;
	end Main_Processor;
	
	processor implementation Main_Processor.impl
		subcomponents
			this_memory: memory RAM;
	end Main_Processor.impl;
	
	memory RAM		
	end RAM;

end ticketmachine;